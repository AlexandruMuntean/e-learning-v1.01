@model Tuple<E_LearningApplication.Models.ViewModels.HomeworksViewModel, List<E_LearningApplication.Models.ViewModels.HomeworkAssignementViewModel>, int>

@{
    var viewModel = Model.Item1;
    var viewModelList = Model.Item2;
    var _courseModuleId = Model.Item3;

    var _userId = Session["UserId"];
    var _sessionUser = Convert.ToInt32(_userId);
}

<div class="form-panel">

    <div class="panel panel-body panel-default">
        <h2><i class="fa fa-angle-right"></i> Homework Details</h2>

        <div class="mb">
            <div class="col-lg-6">
                @Html.HiddenFor(model => viewModel.HomeworkId)
                @Html.HiddenFor(model => viewModel.HomeworkCode)

                <div class="display-label">
                    @Html.DisplayNameFor(model => viewModel.HomeworkName)
                </div>
                <div class="display-field mb">
                    @Html.DisplayFor(model => viewModel.HomeworkName)
                </div>

                <div class="display-label">
                    @Html.DisplayNameFor(model => viewModel.HomeworkDescription)
                </div>
                <div class="display-field mb">
                    @Html.DisplayFor(model => viewModel.HomeworkDescription)
                    <button class="mt btn btn-info btn-xs" title="Download course resources">
                        <i class="fa fa-arrow-down"></i>
                        @Html.ActionLink("Download", "DowloadCourseResource", new { id = viewModel.HomeworkId })
                    </button>
                </div>

                <div class="display-label">
                    @Html.DisplayNameFor(model => viewModel.HomeworkDeadline)
                </div>
                <div class="display-field mb">
                    @Html.DisplayFor(model => viewModel.HomeworkDeadline)
                </div>

                <div class="display-label">
                    @Html.DisplayNameFor(model => viewModel.HomeworkPoints)
                </div>
                <div class="display-field mb">
                    @Html.DisplayFor(model => viewModel.HomeworkPoints)
                </div>

                <div class="display-label">
                    @Html.DisplayNameFor(model => viewModel.HomeworkAccessSpan)
                </div>
                <div class="display-field mb">
                    @Html.DisplayFor(model => viewModel.HomeworkAccessSpan)
                </div>
            </div>

            <div class="col-lg-6">
                @if (_sessionUser == viewModel.OwnerId) {
                    <div class="row mb">
                        <button class="btn btn-theme03 btn-xs" title="Edit group details">
                            <i class="fa fa-pencil"></i>
                            @Html.ActionLink("Edit", "EditCourseModuleHomework", new { id = viewModel.HomeworkId, courseModuleId = _courseModuleId })
                        </button>
                    </div>

                    <div class="row mb">
                        @using (Html.BeginForm("DeleteCourseModuleHomework", "Homework", new { id = viewModel.HomeworkId, courseModuleId = _courseModuleId }, FormMethod.Post, new { title = "Delete homework from module" })) {
                            @Html.AntiForgeryToken()
                            <button type="submit" class="btn btn-danger btn-xs" title="Delete homework from module">
                                <i class="fa fa-trash-o"></i> Delete
                            </button>
                        }
                    </div>
                }

                <div class="row mb">
                    <button class="btn btn-theme btn-xs" title="Add assignement for the homework">
                        <i class="fa fa-folder-open"></i>
                        @Html.ActionLink("Add Assignement", "AssignCourseModuleHomework", "Homework", new { id = viewModel.HomeworkId, courseModuleId = _courseModuleId }, new { title = "Add assignement for the homework" })
                    </button>
                </div>
            </div>
        </div>
    </div>

    <div class="panel panel-body panel-default">
        <h2><i class="fa fa-angle-right"></i> Homework Assignements</h2>

        <table class="table table-striped table-hover mt">
            <tr>
                <th>Recipient</th>
                <th>Was Submitted?</th>
                <th></th>
            </tr>
            @foreach (var item in viewModelList) {
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => item.StudentId)
                    </td>
                    <td>
                        @if (item.AnswerId != null && item.AnswerId > 0) {
                            <span>Yes</span>
                        }
                        else {
                            <span>No</span>
                        }
                    </td>
                    <td>
                        @using (Html.BeginForm("UnassignCourseModuleHomework", "Homework", new { homeworkId = viewModel.HomeworkId, assignementId = item.AssignementId, courseModuleId = _courseModuleId }, FormMethod.Post, new { title = "Unassign the homework from all the recipients" })) {
                            @Html.AntiForgeryToken()
                            <button type="submit" class="btn btn-theme02 btn-xs" title="Unassign homework">
                                <i class="fa fa-trash-o"></i> Unassign
                            </button>
                        }
                        |
                        @if (item.AnswerId != null && item.AnswerId > 0) {
                            <button class="btn btn-info btn-xs" title="Grade the homework">
                                <i class="fa fa-pencil-square-o"></i>
                                @Html.ActionLink("Grade", "GradeCourseModuleHomework", "Grades", new { assignementId = item.AssignementId, homeworkId = item.HomeworkId, courseModuleId = _courseModuleId }, new { title = "Grade the homework" })
                            </button>
                        }
                        else {
                            <span>Answer not yet submitted</span>
                        }
                    </td>
                </tr>
            }
        </table>
    </div>

</div>
